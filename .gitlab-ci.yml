.OSXTemplate:  &osx_template
  tags:
    - osx
  before_script:
    - brew install wget git git-lfs
    - git submodule update --init --recursive --remote
.LinuxTemplate:  &linux_template
  tags:
    - linux
  image:
    name: condaforge/mambaforge
  before_script:
    - git submodule update --init --recursive --remote
.WindowsTemplate:  &win_template
  tags:
    - win
  before_script:
    - git submodule update --init --recursive --remote
  image:
    name: mambaforge:vs16
.BuildTemplate: &build_template
  artifacts:
    paths:
      - bld-dir/

stages:
  - build
  - test
  - deploy
  - Trigger-cross-projects

build:linux:
  <<: *linux_template
  <<: *build_template
  stage: build
  script:
    - ./tools/build.sh

build:windows:
  <<: *win_template
  <<: *build_template
  stage: build
  script:
    - cmd.ex
    - conda activate base
    - ./tools/build.bat

build:osx:
  <<: *build_template
  <<: *osx_template
  stage: build
  script:
    - ./tools/setup.sh

test:linux:
  stage: test
  tags:
    - linux
  image:
    name: condaforge/mambaforge
  before_script:
    # Issue with OpenGL and X11 display
    # See: https://stackoverflow.com/questions/65675765/is-it-possible-to-run-x11-on-gitlab-ci
    # See: https://github.com/conda-forge/pygridgen-feedstock/issues/10
    # procps is used to grep the process by name to kill it when needed
    - apt update -yq
    - apt install -yq xorg-dev libglu1-mesa libgl1-mesa-dev xvfb libxinerama1 libxcursor1 libgl1-mesa-glx procps
  script:
    - source activate
    # Disable Numba JIT for correct coverage analysis
    - export NUMBA_DISABLE_JIT=1
    - cp tools/.condarc ~/.condarc
    - conda config --add channels "file://`pwd`/bld-dir"
    - mamba create -n test python tttrconvert
    - conda activate test
    # Run GUI with xvfb - no X11 screen
    - |
      xvfb-run -a -s "-screen 0 1400x900x24 +extension RANDR" -- tttrconvert &
      sleep 10
      pgrep -f tttrconvert | awk '{print "kill -9 " $1}' | sh

deploy:conda:
  <<: *linux_template
  stage: deploy
  dependencies:
    - build:linux
    - build:windows
    - build:osx
  script:
    - ./tools/deploy.sh

chisurf:
  stage: Trigger-cross-projects
  trigger: chisurf/chisurf

build:linux:
  stage: build
  tags:
    - linux
  image: condaforge/mambaforge:latest
  before_script:
    - apt update -yq && apt -yq install build-essential
    - git submodule update --init --recursive --remote
    - cd tools && git pull --force && cd ..
  script:
    - ./tools/build.sh
  artifacts:
    paths:
      - bld-dir/

build:windows:
  image: mambaforge:vs16
  tags:
    - win
  stage: build
  before_script:
    - cd tools && git pull --force && cd ..
    - git submodule update --init --recursive --remote
  script:
    - cmd.exe
    - conda activate base
    - git submodule update --init --recursive --remote
    - .\tools\build.bat
  artifacts:
    paths:
      - bld-dir/

build:osx:
  stage: build
  tags:
    - osx
  before_script:
    - cd tools && git pull --force && cd ..
    - git submodule update --init --recursive --remote
  script:
    - ./tools/build.sh
  artifacts:
    paths:
      - bld-dir/

test:linux:
  stage: test
  tags:
    - linux
  image:
    name: condaforge/mambaforge
  before_script:
    # Issue with OpenGL and X11 display
    # See: https://stackoverflow.com/questions/65675765/is-it-possible-to-run-x11-on-gitlab-ci
    # See: https://github.com/conda-forge/pygridgen-feedstock/issues/10
    # procps is used to grep the process by name to kill it when needed
    - apt update -yq
    - apt install -yq xorg-dev libglu1-mesa libgl1-mesa-dev xvfb libxinerama1 libxcursor1 libgl1-mesa-glx procps
  script:
    - source activate
    # Disable Numba JIT for correct coverage analysis
    - export NUMBA_DISABLE_JIT=1
    - cp tools/.condarc ~/.condarc
    - conda config --add channels "file://`pwd`/bld-dir"
    - mamba create -n test python tttrconvert
    - conda activate test
    # Run GUI with xvfb - no X11 screen
    - |
      xvfb-run -a -s "-screen 0 1400x900x24 +extension RANDR" -- tttrconvert &
      sleep 10
      pgrep -f tttrconvert | awk '{print "kill -9 " $1}' | sh

deploy:conda:
  tags:
    - linux
  image: condaforge/mambaforge:latest
  stage: deploy
  dependencies:
    - build:linux
    - build:windows
    - build:osx
  script:
    - ./tools/deploy.sh

chisurf:
  stage: Trigger-cross-projects
  trigger: chisurf/chisurf
